{
  "compilerOptions": {
    "outDir": "./dist/",
    // Подсвечивает все места где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any
    // Это означает лишь, что в подобных ситуациях разработчик должен явно писать any
    "noImplicitAny": true,
    "module": "ESNext",
    "target": "es5",
    // Во что по итогу компилируется код
    "jsx": "react-jsx",
    // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
    "allowJs": true,
    "moduleResolution": "node",
    "baseUrl": ".",
    "paths": {
      "*": [
        "./src/*"
      ]
    },
    // esModuleInterop позволяет работать с пакетами, которые используют common.js
    // как с обычными пакетами с помощью import (require(), module.export) == common.js
    "esModuleInterop": true,
    // Если какая либо библиотека не имеет default import, лоадеры вроде ts-loader или babel-loader
    // автоматически создают их
    // и вместо такого импорта (import * as React from 'react')
    // можно писать такой
    // import React from 'react';
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
  "include": [
    "./config/jest/setupTests.ts"
  ]
}